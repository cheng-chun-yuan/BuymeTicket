{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyCallOption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEnterTicket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetCallOption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604081905260008054600160ff199182168117909255600480549091169091179055600a90633b9aca009060069073b637e978d7661ff540b845c70ce84ce448b169029061004e906100be565b938452602084019290925260408301526001600160a01b03166060820152608001604051809103906000f08015801561008b573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b03929092169190911790553480156100b857600080fd5b506100cb565b6121d280611a9c83390190565b6119c2806100da6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806387addbe411610097578063b5b3460311610066578063b5b3460314610197578063ba414fa61461019f578063e20c9f71146101b7578063fa7626d4146101bf57600080fd5b806387addbe414610177578063916a17c61461017f5780639642ddaf14610187578063b5508aa91461018f57600080fd5b80633f7286f4116100d35780633f7286f41461013d5780635558075b1461014557806366d9a9a01461014d57806385226c811461016257600080fd5b8063168f4410146101055780631ed7831c1461010f5780632bb78d361461012d5780633e5e3c2314610135575b600080fd5b61010d6101cc565b005b6101176105f9565b60405161012491906115c9565b60405180910390f35b61010d61065b565b610117610744565b6101176107a4565b61010d610804565b610155610919565b6040516101249190611616565b61016a610a08565b60405161012491906116ed565b61010d610ad8565b610155610c2e565b61010d610d14565b61016a611006565b61010d6110d6565b6101a761143e565b6040519015158152602001610124565b610117611569565b6000546101a79060ff1681565b60405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561021857600080fd5b505af115801561022c573d6000803e3d6000fd5b5050601b5460405163d811191b60e01b8152600160048201526001600160a01b03909116925063d811191b9150602401600060405180830381600087803b15801561027657600080fd5b505af115801561028a573d6000803e3d6000fd5b5050601b54604051637cf2bf2160e01b8152606460048201819052603c6024830152670de0b6b3a76400006044830181905290820152600a60848201526001600160a01b039091169250637cf2bf21915060a401600060405180830381600087803b1580156102f857600080fd5b505af115801561030c573d6000803e3d6000fd5b505060405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801561035c57600080fd5b505af1158015610370573d6000803e3d6000fd5b5050601b5460405163d27ef04f60e01b8152600160048201526001600160a01b03909116925063d27ef04f9150602401600060405180830381600087803b1580156103ba57600080fd5b505af11580156103ce573d6000803e3d6000fd5b505060405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801561041e57600080fd5b505af1158015610432573d6000803e3d6000fd5b5050601b546040516358807a9760e11b8152600160048201526001600160a01b03909116925063b100f52e9150602401602060405180830381865afa15801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a39190611767565b156104b0576104b0611790565b601b546040516329eab61360e21b8152600160048201526001600160a01b039091169063a7aad84c90602401600060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b505060405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801561055a57600080fd5b505af115801561056e573d6000803e3d6000fd5b5050601b546040516358807a9760e11b815260016004820152600093506001600160a01b03909116915063b100f52e90602401602060405180830381865afa1580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190611767565b90506001811515146105f6576105f6611790565b50565b6060600d80548060200260200160405190810160405280929190818152602001828054801561065157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610633575b5050505050905090565b601b5460405163d811191b60e01b8152600360048201526001600160a01b039091169063d811191b90602401600060405180830381600087803b1580156106a157600080fd5b505af11580156106b5573d6000803e3d6000fd5b505050506000601b60009054906101000a90046001600160a01b03166001600160a01b031663c3b8f61c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561070e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073291906117a6565b9050806003146105f6576105f6611790565b6060600f805480602002602001604051908101604052809291908181526020018280548015610651576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610633575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610651576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610633575050505050905090565b601b54604051637cf2bf2160e01b8152606460048201819052603c6024830152670de0b6b3a76400006044830181905290820152600a60848201526001600160a01b0390911690637cf2bf219060a401600060405180830381600087803b15801561086e57600080fd5b505af1158015610882573d6000803e3d6000fd5b505050506000601b60009054906101000a90046001600160a01b03166001600160a01b0316634bd25c6f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff91906117a6565b9050633b9aca0080821461091557610915611790565b5050565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156109ff5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156109e757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116109a95790505b5050505050815250508152602001906001019061093d565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156109ff578382906000526020600020018054610a4b906117bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610a77906117bf565b8015610ac45780601f10610a9957610100808354040283529160200191610ac4565b820191906000526020600020905b815481529060010190602001808311610aa757829003601f168201915b505050505081526020019060010190610a2c565b601b546040516304fe614160e31b81523060048201526000916001600160a01b0316906327f30a0890602401602060405180830381865afa158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4591906117a6565b601b5460405163d811191b60e01b8152600360048201529192506001600160a01b03169063d811191b90602401600060405180830381600087803b158015610b8c57600080fd5b505af1158015610ba0573d6000803e3d6000fd5b5050601b546040516304fe614160e31b8152306004820152600093506001600160a01b0390911691506327f30a0890602401602060405180830381865afa158015610bef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1391906117a6565b9050610c208260036117f9565b811461091557610915611790565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156109ff5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610cfc57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610cbe5790505b50505050508152505081526020019060010190610c52565b601b546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8191906117a6565b60405163ca669fa760e01b8152336004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015610dd057600080fd5b505af1158015610de4573d6000803e3d6000fd5b5050601b5460405163d811191b60e01b8152600360048201526001600160a01b03909116925063d811191b9150602401600060405180830381600087803b158015610e2e57600080fd5b505af1158015610e42573d6000803e3d6000fd5b5050601b54604051637cf2bf2160e01b8152606460048201819052603c6024830152670de0b6b3a76400006044830181905290820152600a60848201526001600160a01b039091169250637cf2bf21915060a401600060405180830381600087803b158015610eb057600080fd5b505af1158015610ec4573d6000803e3d6000fd5b505060405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015610f1457600080fd5b505af1158015610f28573d6000803e3d6000fd5b5050601b5460405163d27ef04f60e01b8152600160048201526001600160a01b03909116925063d27ef04f9150602401600060405180830381600087803b158015610f7257600080fd5b505af1158015610f86573d6000803e3d6000fd5b5050601b546040516370a0823160e01b8152336004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015610fd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff991906117a6565b9050610c208260016117f9565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156109ff578382906000526020600020018054611049906117bf565b80601f0160208091040260200160405190810160405280929190818152602001828054611075906117bf565b80156110c25780601f10611097576101008083540402835291602001916110c2565b820191906000526020600020905b8154815290600101906020018083116110a557829003601f168201915b50505050508152602001906001019061102a565b60405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561112257600080fd5b505af1158015611136573d6000803e3d6000fd5b5050601b5460405163d811191b60e01b8152600160048201526001600160a01b03909116925063d811191b9150602401600060405180830381600087803b15801561118057600080fd5b505af1158015611194573d6000803e3d6000fd5b5050601b54604051637cf2bf2160e01b8152606460048201819052603c6024830152670de0b6b3a76400006044830181905290820152600a60848201526001600160a01b039091169250637cf2bf21915060a401600060405180830381600087803b15801561120257600080fd5b505af1158015611216573d6000803e3d6000fd5b505060405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801561126657600080fd5b505af115801561127a573d6000803e3d6000fd5b5050601b5460405163d27ef04f60e01b8152600160048201526001600160a01b03909116925063d27ef04f9150602401600060405180830381600087803b1580156112c457600080fd5b505af11580156112d8573d6000803e3d6000fd5b505060405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801561132857600080fd5b505af115801561133c573d6000803e3d6000fd5b5050601b5460405163c87b56dd60e01b815260016004820152600093506001600160a01b03909116915063c87b56dd90602401600060405180830381865afa15801561138c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113b49190810190611836565b905060006040518060800160405280605c8152602001611931605c913990506000816040516020016113e691906118e3565b60405160208183030381529060405280519060200120905060008360405160200161141191906118e3565b60405160208183030381529060405280519060200120905080821461143857611438611790565b50505050565b60008054610100900460ff161561145e5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156115645760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916114ec917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016118ff565b60408051601f1981840301815290829052611506916118e3565b6000604051808303816000865af19150503d8060008114611543576040519150601f19603f3d011682016040523d82523d6000602084013e611548565b606091505b50915050808060200190518101906115609190611767565b9150505b919050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610651576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610633575050505050905090565b6020808252825182820181905260009190848201906040850190845b8181101561160a5783516001600160a01b0316835292840192918401916001016115e5565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156116ba57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156116a55783516001600160e01b0319168252928b019260019290920191908b019061167b565b50978a0197955050509187019160010161163e565b50919998505050505050505050565b60005b838110156116e45781810151838201526020016116cc565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561175a57878503603f190184528151805180875261173b818989018a85016116c9565b601f01601f191695909501860194509285019290850190600101611714565b5092979650505050505050565b60006020828403121561177957600080fd5b8151801515811461178957600080fd5b9392505050565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156117b857600080fd5b5051919050565b600181811c908216806117d357607f821691505b6020821081036117f357634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561181a57634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561184857600080fd5b815167ffffffffffffffff8082111561186057600080fd5b818401915084601f83011261187457600080fd5b81518181111561188657611886611820565b604051601f8201601f19908116603f011681019083821181831017156118ae576118ae611820565b816040528281528760208487010111156118c757600080fd5b6118d88360208301602088016116c9565b979650505050505050565b600082516118f58184602087016116c9565b9190910192915050565b6001600160e01b03198316815281516000906119228160048501602087016116c9565b91909101600401939250505056fe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d64447a4c345262324a4c634a645150744e75434a535a3554545a4b77594a5862626a7971567134396979794c2f7469636b65742e6a736f6ea2646970667358221220d3c601ef42a708ba123b6b849fea1676cf10b2caf7f96a8dfdd90f3ce435c8cc64736f6c6343000813003360806040526000600a556000600d553480156200001b57600080fd5b50604051620021d2380380620021d28339810160408190526200003e91620000e4565b6040518060400160405280600b81526020016a109d5e5b59551a58dad95d60aa1b81525060405180604001604052806003815260200162109b5560ea1b81525081600090816200008f9190620001da565b5060016200009e8282620001da565b50505060089390935560099190915560078054336001600160a01b031991821617909155600680549091166001600160a01b0390931692909217909155600c55620002a6565b60008060008060808587031215620000fb57600080fd5b845160208601516040870151606088015192965090945092506001600160a01b03811681146200012a57600080fd5b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200016057607f821691505b6020821081036200018157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001d557600081815260208120601f850160051c81016020861015620001b05750805b601f850160051c820191505b81811015620001d157828155600101620001bc565b5050505b505050565b81516001600160401b03811115620001f657620001f662000135565b6200020e816200020784546200014b565b8462000187565b602080601f8311600181146200024657600084156200022d5750858301515b600019600386901b1c1916600185901b178555620001d1565b600085815260208120601f198616915b82811015620002775788860151825594840194600190910190840162000256565b5085821015620002965787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611f1c80620002b66000396000f3fe6080604052600436106101ee5760003560e01c80637cf2bf211161010d578063b88d4fde116100a0578063d27ef04f1161006f578063d27ef04f146105a9578063d5abeb01146105bc578063d811191b146105d2578063e985e9c5146105e5578063fc0c546a1461060557600080fd5b8063b88d4fde1461053e578063baa2b6961461055e578063c3b8f61c14610574578063c87b56dd1461058957600080fd5b806395d89b41116100dc57806395d89b41146104b9578063a22cb465146104ce578063a7aad84c146104ee578063b100f52e1461050e57600080fd5b80637cf2bf211461040b5780637d9f6db51461042b5780637e66f15f146104835780638da5cb5b1461049957600080fd5b80633ccfd60b116101855780636352211e116101545780636352211e1461037b578063642b5f9b1461039b57806370a08231146103cb57806374742680146103eb57600080fd5b80633ccfd60b1461032857806342842e0e14610330578063453c2310146103505780634bd25c6f1461036657600080fd5b80630d39fc81116101c15780630d39fc81146102a457806323b872dd146102c8578063278ecde1146102e857806327f30a08146102fb57600080fd5b806301ffc9a7146101f357806306fdde0314610228578063081812fc1461024a578063095ea7b314610282575b600080fd5b3480156101ff57600080fd5b5061021361020e366004611901565b610625565b60405190151581526020015b60405180910390f35b34801561023457600080fd5b5061023d610677565b60405161021f9190611975565b34801561025657600080fd5b5061026a610265366004611988565b610709565b6040516001600160a01b03909116815260200161021f565b34801561028e57600080fd5b506102a261029d3660046119bd565b610730565b005b3480156102b057600080fd5b506102ba60095481565b60405190815260200161021f565b3480156102d457600080fd5b506102a26102e33660046119e7565b61084a565b6102a26102f6366004611988565b61087b565b34801561030757600080fd5b506102ba610316366004611a23565b600e6020526000908152604090205481565b6102a2610a68565b34801561033c57600080fd5b506102a261034b3660046119e7565b610afd565b34801561035c57600080fd5b506102ba600c5481565b34801561037257600080fd5b506102ba610b18565b34801561038757600080fd5b5061026a610396366004611988565b610be1565b3480156103a757600080fd5b506102136103b6366004611988565b600f6020526000908152604090205460ff1681565b3480156103d757600080fd5b506102ba6103e6366004611a23565b610c41565b3480156103f757600080fd5b506102ba610406366004611988565b610cc7565b34801561041757600080fd5b506102a2610426366004611a3e565b610d15565b34801561043757600080fd5b5060105460115460125460135460145460155461045695949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161021f565b34801561048f57600080fd5b506102ba600a5481565b3480156104a557600080fd5b5060075461026a906001600160a01b031681565b3480156104c557600080fd5b5061023d610d7c565b3480156104da57600080fd5b506102a26104e9366004611a79565b610d8b565b3480156104fa57600080fd5b506102a2610509366004611988565b610d9a565b34801561051a57600080fd5b50610213610529366004611988565b6000908152600f602052604090205460ff1690565b34801561054a57600080fd5b506102a2610559366004611acb565b610e5a565b34801561056a57600080fd5b506102ba600d5481565b34801561058057600080fd5b506102ba610e92565b34801561059557600080fd5b5061023d6105a4366004611988565b610ed0565b6102a26105b7366004611988565b610f38565b3480156105c857600080fd5b506102ba60085481565b6102a26105e0366004611988565b6110eb565b3480156105f157600080fd5b50610213610600366004611ba7565b61113a565b34801561061157600080fd5b5060065461026a906001600160a01b031681565b60006001600160e01b031982166380ac58cd60e01b148061065657506001600160e01b03198216635b5e139f60e01b145b8061067157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461068690611bda565b80601f01602080910402602001604051908101604052809291908181526020018280546106b290611bda565b80156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b5050505050905090565b600061071482611168565b506000908152600460205260409020546001600160a01b031690565b600061073b82610be1565b9050806001600160a01b0316836001600160a01b0316036107ad5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806107c957506107c9813361113a565b61083b5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016107a4565b61084583836111c7565b505050565b6108543382611235565b6108705760405162461bcd60e51b81526004016107a490611c14565b610845838383611293565b6000818152600260205260409020546001600160a01b03166108df5760405162461bcd60e51b815260206004820152601a60248201527f455243373231413a206e6f6e6578697374656e7420746f6b656e00000000000060448201526064016107a4565b6108e881610be1565b6001600160a01b0316336001600160a01b03161461095d5760405162461bcd60e51b815260206004820152602c60248201527f455243373231413a206f6e6c7920746f6b656e206f776e65722063616e20726560448201526b1c5d595cdd081c99599d5b9960a21b60648201526084016107a4565b6000600a610969610b18565b610974906009611c77565b61097e9190611c8e565b9050804710156109df5760405162461bcd60e51b815260206004820152602660248201527f455243373231413a20696e73756666696369656e742066756e647320666f72206044820152651c99599d5b9960d21b60648201526084016107a4565b6109e8826112f8565b600d80549060006109f883611cb0565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610a2a573d6000803e3d6000fd5b5060408051838152602081018390527f5eee8032448a7f1556f67b8a76a4dcfd75ff98c05198df9f420467d0a1234e38910160405180910390a15050565b6007546001600160a01b03163314610ace5760405162461bcd60e51b8152602060048201526024808201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e20776974686044820152636472617760e01b60648201526084016107a4565b60405133904780156108fc02916000818181858888f19350505050158015610afa573d6000803e3d6000fd5b50565b61084583838360405180602001604052806000815250610e5a565b6040805160c0810182526010548082526011546020830152601254928201929092526013546060820152601454608082015260155460a0820152600091421015610b655760400151919050565b6020810151815160009190610b7a9042611cc9565b610b849190611c8e565b90508160a00151811115610b99575060a08101515b6080820151610ba89082611c77565b826040015111610bbc578160600151610bda565b6080820151610bcb9082611c77565b8260400151610bda9190611cc9565b9250505090565b6000818152600260205260408120546001600160a01b0316806106715760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016107a4565b60006001600160a01b038216610cab5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016107a4565b506001600160a01b031660009081526003602052604090205490565b600080610cd333610c41565b90506000600284610ce48483611c77565b610cef876001611cdc565b610cf99190611cdc565b610d039190611c77565b610d0d9190611c8e565b949350505050565b6007546001600160a01b03163314610d5f5760405162461bcd60e51b815260206004820152600d60248201526c3737903832b936b4b9b9b4b7b760991b60448201526064016107a4565b601094909455601192909255600954601255601355601455601555565b60606001805461068690611bda565b610d9633838361138d565b5050565b6007546001600160a01b03163314610de45760405162461bcd60e51b815260206004820152600d60248201526c3737903832b936b4b9b9b4b7b760991b60448201526064016107a4565b6000818152600260205260409020546001600160a01b0316610e3f5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016107a4565b6000908152600f60205260409020805460ff19166001179055565b610e643383611235565b610e805760405162461bcd60e51b81526004016107a490611c14565b610e8c8484848461145b565b50505050565b600066b1a2bc2ec5000033311015610ebc5760405162461bcd60e51b81526004016107a490611cef565b50336000908152600e602052604090205490565b6060610edb82611168565b6000828152600f602052604090205460ff1615610f2057610efa61148e565b604051602001610f0a9190611d34565b6040516020818303038152906040529050919050565b610f2861148e565b604051602001610f0a9190611d75565b66b1a2bc2ec5000033311015610f605760405162461bcd60e51b81526004016107a490611cef565b610f6933610c41565b610f739082611cdc565b610f7b610e92565b1015610fc15760405162461bcd60e51b8152602060048201526015602482015274109d5e4818d85b1b081bdc1d1a5bdb88199a5c9cdd605a1b60448201526064016107a4565b600c5481610fce33610c41565b610fd89190611cdc565b11156110265760405162461bcd60e51b815260206004820152601760248201527f657863656564206d61782077616c6c6574206c696d697400000000000000000060448201526064016107a4565b6000611030610b18565b61103a9083611c77565b905060085482600a5461104d9190611cdc565b11156110865760405162461bcd60e51b81526020600482015260086024820152671cdbdb19081bdd5d60c21b60448201526064016107a4565b60005b82811015610845576000600a5460016110a29190611cdc565b600a805491925060006110b483611cb0565b91905055506110c333826114ae565b6000908152600f60205260409020805460ff19169055806110e381611cb0565b915050611089565b66b1a2bc2ec50000333110156111135760405162461bcd60e51b81526004016107a490611cef565b336000908152600e602052604081208054839290611132908490611cdc565b909155505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b0316610afa5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016107a4565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111fc82610be1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061124183610be1565b9050806001600160a01b0316846001600160a01b031614806112685750611268818561113a565b80610d0d5750836001600160a01b031661128184610709565b6001600160a01b031614949350505050565b6007546001600160a01b031633146112ed5760405162461bcd60e51b815260206004820152601760248201527f5472616e73666572206e6f7420617574686f72697a656400000000000000000060448201526064016107a4565b6108458383836114c8565b600061130382610be1565b905061130e82610be1565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b816001600160a01b0316836001600160a01b0316036113ee5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107a4565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611466848484611293565b6114728484848461162c565b610e8c5760405162461bcd60e51b81526004016107a490611da4565b6060604051806080016040528060518152602001611e9660519139905090565b610d9682826040518060200160405280600081525061172d565b826001600160a01b03166114db82610be1565b6001600160a01b0316146115015760405162461bcd60e51b81526004016107a490611df6565b6001600160a01b0382166115635760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107a4565b826001600160a01b031661157682610be1565b6001600160a01b03161461159c5760405162461bcd60e51b81526004016107a490611df6565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006001600160a01b0384163b1561172257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611670903390899088908890600401611e3b565b6020604051808303816000875af19250505080156116ab575060408051601f3d908101601f191682019092526116a891810190611e78565b60015b611708573d8080156116d9576040519150601f19603f3d011682016040523d82523d6000602084013e6116de565b606091505b5080516000036117005760405162461bcd60e51b81526004016107a490611da4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d0d565b506001949350505050565b6117378383611760565b611744600084848461162c565b6108455760405162461bcd60e51b81526004016107a490611da4565b6001600160a01b0382166117b65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107a4565b6000818152600260205260409020546001600160a01b03161561181b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107a4565b6000818152600260205260409020546001600160a01b0316156118805760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107a4565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610afa57600080fd5b60006020828403121561191357600080fd5b813561191e816118eb565b9392505050565b60005b83811015611940578181015183820152602001611928565b50506000910152565b60008151808452611961816020860160208601611925565b601f01601f19169290920160200192915050565b60208152600061191e6020830184611949565b60006020828403121561199a57600080fd5b5035919050565b80356001600160a01b03811681146119b857600080fd5b919050565b600080604083850312156119d057600080fd5b6119d9836119a1565b946020939093013593505050565b6000806000606084860312156119fc57600080fd5b611a05846119a1565b9250611a13602085016119a1565b9150604084013590509250925092565b600060208284031215611a3557600080fd5b61191e826119a1565b600080600080600060a08688031215611a5657600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060408385031215611a8c57600080fd5b611a95836119a1565b915060208301358015158114611aaa57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611ae157600080fd5b611aea856119a1565b9350611af8602086016119a1565b925060408501359150606085013567ffffffffffffffff80821115611b1c57600080fd5b818701915087601f830112611b3057600080fd5b813581811115611b4257611b42611ab5565b604051601f8201601f19908116603f01168101908382118183101715611b6a57611b6a611ab5565b816040528281528a6020848701011115611b8357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611bba57600080fd5b611bc3836119a1565b9150611bd1602084016119a1565b90509250929050565b600181811c90821680611bee57607f821691505b602082108103611c0e57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761067157610671611c61565b600082611cab57634e487b7160e01b600052601260045260246000fd5b500490565b600060018201611cc257611cc2611c61565b5060010190565b8181038181111561067157610671611c61565b8082018082111561067157610671611c61565b60208082526025908201527f706c6561736520616464206d6f7265206d6f6e657920746f20796f757220616360408201526418dbdd5b9d60da1b606082015260800190565b60008251611d46818460208701611925565b7f636f6d6d656d6f7261746976655f7469636b65742e6a736f6e00000000000000920191825250601901919050565b60008251611d87818460208701611925565b6a3a34b1b5b2ba173539b7b760a91b920191825250600b01919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e6e90830184611949565b9695505050505050565b600060208284031215611e8a57600080fd5b815161191e816118eb56fe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d64447a4c345262324a4c634a645150744e75434a535a3554545a4b77594a5862626a7971567134396979794c2fa2646970667358221220479f291124e6fbe39b337b70548ddd1627ffed005064918b953f6e277a2c8d2764736f6c63430008130033",
    "sourceMap": "110:2567:30:-:0;;;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3288:44:3;;;;;;;;;;;158:2:30;;162:10;;174:1;;184:42;;150:78;;;:::i;:::-;295:25:31;;;351:2;336:18;;329:34;;;;394:2;379:18;;372:34;-1:-1:-1;;;;;442:32:31;437:2;422:18;;415:60;282:3;267:19;150:78:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:87:30;;;-1:-1:-1;;;;;;141:87:30;-1:-1:-1;;;;;141:87:30;;;;;;;;;;110:2567;;;;;;;;;;;;;;;;;;;;:::o;14:467:31:-;110:2567:30;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806387addbe411610097578063b5b3460311610066578063b5b3460314610197578063ba414fa61461019f578063e20c9f71146101b7578063fa7626d4146101bf57600080fd5b806387addbe414610177578063916a17c61461017f5780639642ddaf14610187578063b5508aa91461018f57600080fd5b80633f7286f4116100d35780633f7286f41461013d5780635558075b1461014557806366d9a9a01461014d57806385226c811461016257600080fd5b8063168f4410146101055780631ed7831c1461010f5780632bb78d361461012d5780633e5e3c2314610135575b600080fd5b61010d6101cc565b005b6101176105f9565b60405161012491906115c9565b60405180910390f35b61010d61065b565b610117610744565b6101176107a4565b61010d610804565b610155610919565b6040516101249190611616565b61016a610a08565b60405161012491906116ed565b61010d610ad8565b610155610c2e565b61010d610d14565b61016a611006565b61010d6110d6565b6101a761143e565b6040519015158152602001610124565b610117611569565b6000546101a79060ff1681565b60405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561021857600080fd5b505af115801561022c573d6000803e3d6000fd5b5050601b5460405163d811191b60e01b8152600160048201526001600160a01b03909116925063d811191b9150602401600060405180830381600087803b15801561027657600080fd5b505af115801561028a573d6000803e3d6000fd5b5050601b54604051637cf2bf2160e01b8152606460048201819052603c6024830152670de0b6b3a76400006044830181905290820152600a60848201526001600160a01b039091169250637cf2bf21915060a401600060405180830381600087803b1580156102f857600080fd5b505af115801561030c573d6000803e3d6000fd5b505060405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801561035c57600080fd5b505af1158015610370573d6000803e3d6000fd5b5050601b5460405163d27ef04f60e01b8152600160048201526001600160a01b03909116925063d27ef04f9150602401600060405180830381600087803b1580156103ba57600080fd5b505af11580156103ce573d6000803e3d6000fd5b505060405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801561041e57600080fd5b505af1158015610432573d6000803e3d6000fd5b5050601b546040516358807a9760e11b8152600160048201526001600160a01b03909116925063b100f52e9150602401602060405180830381865afa15801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a39190611767565b156104b0576104b0611790565b601b546040516329eab61360e21b8152600160048201526001600160a01b039091169063a7aad84c90602401600060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b505060405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801561055a57600080fd5b505af115801561056e573d6000803e3d6000fd5b5050601b546040516358807a9760e11b815260016004820152600093506001600160a01b03909116915063b100f52e90602401602060405180830381865afa1580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190611767565b90506001811515146105f6576105f6611790565b50565b6060600d80548060200260200160405190810160405280929190818152602001828054801561065157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610633575b5050505050905090565b601b5460405163d811191b60e01b8152600360048201526001600160a01b039091169063d811191b90602401600060405180830381600087803b1580156106a157600080fd5b505af11580156106b5573d6000803e3d6000fd5b505050506000601b60009054906101000a90046001600160a01b03166001600160a01b031663c3b8f61c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561070e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073291906117a6565b9050806003146105f6576105f6611790565b6060600f805480602002602001604051908101604052809291908181526020018280548015610651576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610633575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610651576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610633575050505050905090565b601b54604051637cf2bf2160e01b8152606460048201819052603c6024830152670de0b6b3a76400006044830181905290820152600a60848201526001600160a01b0390911690637cf2bf219060a401600060405180830381600087803b15801561086e57600080fd5b505af1158015610882573d6000803e3d6000fd5b505050506000601b60009054906101000a90046001600160a01b03166001600160a01b0316634bd25c6f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff91906117a6565b9050633b9aca0080821461091557610915611790565b5050565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156109ff5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156109e757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116109a95790505b5050505050815250508152602001906001019061093d565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156109ff578382906000526020600020018054610a4b906117bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610a77906117bf565b8015610ac45780601f10610a9957610100808354040283529160200191610ac4565b820191906000526020600020905b815481529060010190602001808311610aa757829003601f168201915b505050505081526020019060010190610a2c565b601b546040516304fe614160e31b81523060048201526000916001600160a01b0316906327f30a0890602401602060405180830381865afa158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4591906117a6565b601b5460405163d811191b60e01b8152600360048201529192506001600160a01b03169063d811191b90602401600060405180830381600087803b158015610b8c57600080fd5b505af1158015610ba0573d6000803e3d6000fd5b5050601b546040516304fe614160e31b8152306004820152600093506001600160a01b0390911691506327f30a0890602401602060405180830381865afa158015610bef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1391906117a6565b9050610c208260036117f9565b811461091557610915611790565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156109ff5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610cfc57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610cbe5790505b50505050508152505081526020019060010190610c52565b601b546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8191906117a6565b60405163ca669fa760e01b8152336004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015610dd057600080fd5b505af1158015610de4573d6000803e3d6000fd5b5050601b5460405163d811191b60e01b8152600360048201526001600160a01b03909116925063d811191b9150602401600060405180830381600087803b158015610e2e57600080fd5b505af1158015610e42573d6000803e3d6000fd5b5050601b54604051637cf2bf2160e01b8152606460048201819052603c6024830152670de0b6b3a76400006044830181905290820152600a60848201526001600160a01b039091169250637cf2bf21915060a401600060405180830381600087803b158015610eb057600080fd5b505af1158015610ec4573d6000803e3d6000fd5b505060405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015610f1457600080fd5b505af1158015610f28573d6000803e3d6000fd5b5050601b5460405163d27ef04f60e01b8152600160048201526001600160a01b03909116925063d27ef04f9150602401600060405180830381600087803b158015610f7257600080fd5b505af1158015610f86573d6000803e3d6000fd5b5050601b546040516370a0823160e01b8152336004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015610fd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff991906117a6565b9050610c208260016117f9565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156109ff578382906000526020600020018054611049906117bf565b80601f0160208091040260200160405190810160405280929190818152602001828054611075906117bf565b80156110c25780601f10611097576101008083540402835291602001916110c2565b820191906000526020600020905b8154815290600101906020018083116110a557829003601f168201915b50505050508152602001906001019061102a565b60405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561112257600080fd5b505af1158015611136573d6000803e3d6000fd5b5050601b5460405163d811191b60e01b8152600160048201526001600160a01b03909116925063d811191b9150602401600060405180830381600087803b15801561118057600080fd5b505af1158015611194573d6000803e3d6000fd5b5050601b54604051637cf2bf2160e01b8152606460048201819052603c6024830152670de0b6b3a76400006044830181905290820152600a60848201526001600160a01b039091169250637cf2bf21915060a401600060405180830381600087803b15801561120257600080fd5b505af1158015611216573d6000803e3d6000fd5b505060405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801561126657600080fd5b505af115801561127a573d6000803e3d6000fd5b5050601b5460405163d27ef04f60e01b8152600160048201526001600160a01b03909116925063d27ef04f9150602401600060405180830381600087803b1580156112c457600080fd5b505af11580156112d8573d6000803e3d6000fd5b505060405163ca669fa760e01b8152336004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801561132857600080fd5b505af115801561133c573d6000803e3d6000fd5b5050601b5460405163c87b56dd60e01b815260016004820152600093506001600160a01b03909116915063c87b56dd90602401600060405180830381865afa15801561138c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113b49190810190611836565b905060006040518060800160405280605c8152602001611931605c913990506000816040516020016113e691906118e3565b60405160208183030381529060405280519060200120905060008360405160200161141191906118e3565b60405160208183030381529060405280519060200120905080821461143857611438611790565b50505050565b60008054610100900460ff161561145e5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156115645760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916114ec917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016118ff565b60408051601f1981840301815290829052611506916118e3565b6000604051808303816000865af19150503d8060008114611543576040519150601f19603f3d011682016040523d82523d6000602084013e611548565b606091505b50915050808060200190518101906115609190611767565b9150505b919050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610651576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610633575050505050905090565b6020808252825182820181905260009190848201906040850190845b8181101561160a5783516001600160a01b0316835292840192918401916001016115e5565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156116ba57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156116a55783516001600160e01b0319168252928b019260019290920191908b019061167b565b50978a0197955050509187019160010161163e565b50919998505050505050505050565b60005b838110156116e45781810151838201526020016116cc565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561175a57878503603f190184528151805180875261173b818989018a85016116c9565b601f01601f191695909501860194509285019290850190600101611714565b5092979650505050505050565b60006020828403121561177957600080fd5b8151801515811461178957600080fd5b9392505050565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156117b857600080fd5b5051919050565b600181811c908216806117d357607f821691505b6020821081036117f357634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561181a57634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561184857600080fd5b815167ffffffffffffffff8082111561186057600080fd5b818401915084601f83011261187457600080fd5b81518181111561188657611886611820565b604051601f8201601f19908116603f011681019083821181831017156118ae576118ae611820565b816040528281528760208487010111156118c757600080fd5b6118d88360208301602088016116c9565b979650505050505050565b600082516118f58184602087016116c9565b9190910192915050565b6001600160e01b03198316815281516000906119228160048501602087016116c9565b91909101600401939250505056fe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d64447a4c345262324a4c634a645150744e75434a535a3554545a4b77594a5862626a7971567134396979794c2f7469636b65742e6a736f6ea2646970667358221220d3c601ef42a708ba123b6b849fea1676cf10b2caf7f96a8dfdd90f3ce435c8cc64736f6c63430008130033",
    "sourceMap": "110:2567:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;956:418;;;:::i;:::-;;2161:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2245:148:30;;;:::i;2930:133:6:-;;;:::i;2631:141::-;;;:::i;2399:210:30:-;;;:::i;2447:178:6:-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;1988:251:30:-;;;:::i;2778:146:6:-;;;:::i;574:376:30:-;;;:::i;1866:141:6:-;;;:::i;1380:602:30:-;;;:::i;1819:584:0:-;;;:::i;:::-;;;3688:14:31;;3681:22;3663:41;;3651:2;3636:18;1819:584:0;3523:187:31;2013:142:6;;;:::i;1572:26:0:-;;;;;;;;;956:418:30;1000:20;;-1:-1:-1;;;1000:20:30;;1009:10;1000:20;;;3861:51:31;1000:8:30;;;;3834:18:31;;1000:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1030:3:30;;:20;;-1:-1:-1;;;1030:20:30;;:3;:20;;;4077:25:31;-1:-1:-1;;;;;1030:3:30;;;;-1:-1:-1;1030:17:30;;-1:-1:-1;4050:18:31;;1030:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1060:3:30;;:45;;-1:-1:-1;;;1060:45:30;;1075:3;1060:45;;;4452:25:31;;;1080:2:30;4493:18:31;;;4486:34;1084:7:30;4536:18:31;;;4529:34;;;4579:18;;;4572:34;1102:2:30;4622:19:31;;;4615:35;-1:-1:-1;;;;;1060:3:30;;;;-1:-1:-1;1060:14:30;;-1:-1:-1;4424:19:31;;1060:45:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1115:20:30;;-1:-1:-1;;;1115:20:30;;1124:10;1115:20;;;3861:51:31;1115:8:30;;-1:-1:-1;1115:8:30;;-1:-1:-1;3834:18:31;;1115:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1145:3:30;;:21;;-1:-1:-1;;;1145:21:30;;:3;:21;;;4077:25:31;-1:-1:-1;;;;;1145:3:30;;;;-1:-1:-1;1145:18:30;;-1:-1:-1;4050:18:31;;1145:21:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1176:20:30;;-1:-1:-1;;;1176:20:30;;1185:10;1176:20;;;3861:51:31;1176:8:30;;-1:-1:-1;1176:8:30;;-1:-1:-1;3834:18:31;;1176:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1213:3:30;;:18;;-1:-1:-1;;;1213:18:30;;:3;:18;;;4077:25:31;-1:-1:-1;;;;;1213:3:30;;;;-1:-1:-1;1213:15:30;;-1:-1:-1;4050:18:31;;1213::30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;1206:34;;;;:::i;:::-;1250:3;;:18;;-1:-1:-1;;;1250:18:30;;:3;:18;;;4077:25:31;-1:-1:-1;;;;;1250:3:30;;;;:15;;4050:18:31;;1250::30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1278:20:30;;-1:-1:-1;;;1278:20:30;;1287:10;1278:20;;;3861:51:31;1278:8:30;;-1:-1:-1;1278:8:30;;-1:-1:-1;3834:18:31;;1278:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1320:3:30;;:18;;-1:-1:-1;;;1320:18:30;;:3;:18;;;4077:25:31;1308:9:30;;-1:-1:-1;;;;;;1320:3:30;;;;-1:-1:-1;1320:15:30;;4050:18:31;;1320::30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1308:30;-1:-1:-1;1362:4:30;1355:11;;;;1348:19;;;;:::i;:::-;990:384;956:418::o;2161:134:6:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:6;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2245:148:30:-;2291:3;;:20;;-1:-1:-1;;;2291:20:30;;2309:1;2291:20;;;4077:25:31;-1:-1:-1;;;;;2291:3:30;;;;:17;;4050:18:31;;2291:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2321:14;2338:3;;;;;;;;;-1:-1:-1;;;;;2338:3:30;-1:-1:-1;;;;;2338:17:30;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2321:36;;2374:6;2384:1;2374:11;2367:19;;;;:::i;2930:133:6:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:6;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:6;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2399:210:30:-;2442:3;;:45;;-1:-1:-1;;;2442:45:30;;2457:3;2442:45;;;4452:25:31;;;2462:2:30;4493:18:31;;;4486:34;2466:7:30;4536:18:31;;;4529:34;;;4579:18;;;4572:34;2484:2:30;4622:19:31;;;4615:35;-1:-1:-1;;;;;2442:3:30;;;;:14;;4424:19:31;;2442:45:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2497:13;2513:3;;;;;;;;;-1:-1:-1;;;;;2513:3:30;-1:-1:-1;;;;;2513:19:30;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2497:37;-1:-1:-1;2561:10:30;2588:13;;;2581:21;;;;:::i;:::-;2432:177;;2399:210::o;2447:178:6:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1988:251:30;2059:3;;:32;;-1:-1:-1;;;2059:32:30;;2085:4;2059:32;;;3861:51:31;2034:22:30;;-1:-1:-1;;;;;2059:3:30;;:17;;3834:18:31;;2059:32:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2101:3;;:20;;-1:-1:-1;;;2101:20:30;;2119:1;2101:20;;;4077:25:31;2034:57:30;;-1:-1:-1;;;;;;2101:3:30;;:17;;4050:18:31;;2101:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2152:3:30;;:32;;-1:-1:-1;;;2152:32:30;;2178:4;2152:32;;;3861:51:31;2131:18:30;;-1:-1:-1;;;;;;2152:3:30;;;;-1:-1:-1;2152:17:30;;3834:18:31;;2152:32:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2131:53;-1:-1:-1;2213:18:30;:14;2230:1;2213:18;:::i;:::-;2201:10;:30;2194:38;;;;:::i;2778:146:6:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:376:30;636:3;;:25;;-1:-1:-1;;;636:25:30;;650:10;636:25;;;3861:51:31;611:22:30;;-1:-1:-1;;;;;636:3:30;;:13;;3834:18:31;;636:25:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:20;;-1:-1:-1;;;671:20:30;;680:10;671:20;;;3861:51:31;611:50:30;;-1:-1:-1;671:8:30;;;;3834:18:31;;671:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;701:3:30;;:20;;-1:-1:-1;;;701:20:30;;719:1;701:20;;;4077:25:31;-1:-1:-1;;;;;701:3:30;;;;-1:-1:-1;701:17:30;;-1:-1:-1;4050:18:31;;701:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;731:3:30;;:45;;-1:-1:-1;;;731:45:30;;746:3;731:45;;;4452:25:31;;;751:2:30;4493:18:31;;;4486:34;755:7:30;4536:18:31;;;4529:34;;;4579:18;;;4572:34;773:2:30;4622:19:31;;;4615:35;-1:-1:-1;;;;;731:3:30;;;;-1:-1:-1;731:14:30;;-1:-1:-1;4424:19:31;;731:45:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;786:20:30;;-1:-1:-1;;;786:20:30;;795:10;786:20;;;3861:51:31;786:8:30;;-1:-1:-1;786:8:30;;-1:-1:-1;3834:18:31;;786:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;816:3:30;;:21;;-1:-1:-1;;;816:21:30;;:3;:21;;;4077:25:31;-1:-1:-1;;;;;816:3:30;;;;-1:-1:-1;816:18:30;;-1:-1:-1;4050:18:31;;816:21:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;868:3:30;;:25;;-1:-1:-1;;;868:25:30;;882:10;868:25;;;3861:51:31;847:18:30;;-1:-1:-1;;;;;;868:3:30;;;;-1:-1:-1;868:13:30;;3834:18:31;;868:25:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;847:46;-1:-1:-1;924:18:30;:14;941:1;924:18;:::i;1866:141:6:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1380:602:30;1421:20;;-1:-1:-1;;;1421:20:30;;1430:10;1421:20;;;3861:51:31;1421:8:30;;;;3834:18:31;;1421:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1451:3:30;;:20;;-1:-1:-1;;;1451:20:30;;:3;:20;;;4077:25:31;-1:-1:-1;;;;;1451:3:30;;;;-1:-1:-1;1451:17:30;;-1:-1:-1;4050:18:31;;1451:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1481:3:30;;:45;;-1:-1:-1;;;1481:45:30;;1496:3;1481:45;;;4452:25:31;;;1501:2:30;4493:18:31;;;4486:34;1505:7:30;4536:18:31;;;4529:34;;;4579:18;;;4572:34;1523:2:30;4622:19:31;;;4615:35;-1:-1:-1;;;;;1481:3:30;;;;-1:-1:-1;1481:14:30;;-1:-1:-1;4424:19:31;;1481:45:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1536:20:30;;-1:-1:-1;;;1536:20:30;;1545:10;1536:20;;;3861:51:31;1536:8:30;;-1:-1:-1;1536:8:30;;-1:-1:-1;3834:18:31;;1536:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1566:3:30;;:21;;-1:-1:-1;;;1566:21:30;;:3;:21;;;4077:25:31;-1:-1:-1;;;;;1566:3:30;;;;-1:-1:-1;1566:18:30;;-1:-1:-1;4050:18:31;;1566:21:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1597:20:30;;-1:-1:-1;;;1597:20:30;;1606:10;1597:20;;;3861:51:31;1597:8:30;;-1:-1:-1;1597:8:30;;-1:-1:-1;3834:18:31;;1597:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1650:3:30;;:15;;-1:-1:-1;;;1650:15:30;;:3;:15;;;4077:25:31;1627:20:30;;-1:-1:-1;;;;;;1650:3:30;;;;-1:-1:-1;1650:12:30;;4050:18:31;;1650:15:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1650:15:30;;;;;;;;;;;;:::i;:::-;1627:38;;1675:22;:119;;;;;;;;;;;;;;;;;;;1804:20;1854:8;1837:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;1827:37;;;;;;1804:60;;1874:18;1922:6;1905:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;1895:35;;;;;;1874:56;;1963:10;1947:12;:26;1940:35;;;;:::i;:::-;1411:571;;;;1380:602::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;7568:51:31;;;-1:-1:-1;;;7635:18:31;;;7628:34;2196:43:0;;;;;;;;;7541:18:31;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2013:142:6:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:6;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;14:658:31:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:31;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:31;;14:658;-1:-1:-1;;;;;;14:658:31:o;677:1567::-;879:4;908:2;948;937:9;933:18;978:2;967:9;960:21;1001:6;1036;1030:13;1067:6;1059;1052:22;1093:2;1083:12;;1126:2;1115:9;1111:18;1104:25;;1188:2;1178:6;1175:1;1171:14;1160:9;1156:30;1152:39;1226:2;1218:6;1214:15;1247:1;1268;1278:937;1294:6;1289:3;1286:15;1278:937;;;1363:22;;;-1:-1:-1;;1359:36:31;1347:49;;1419:13;;1506:9;;-1:-1:-1;;;;;1502:35:31;1487:51;;1577:11;;1571:18;1609:15;;;1602:27;;;1690:19;;1459:15;;;1722:24;;;1812:21;;;;1857:1;;1780:2;1768:15;;;1871:236;1887:8;1882:3;1879:17;1871:236;;;1968:15;;-1:-1:-1;;;;;;1964:42:31;1950:57;;2076:17;;;;1915:1;1906:11;;;;;2033:14;;;;1871:236;;;-1:-1:-1;2193:12:31;;;;2130:5;-1:-1:-1;;;2158:15:31;;;;1320:1;1311:11;1278:937;;;-1:-1:-1;2232:6:31;;677:1567;-1:-1:-1;;;;;;;;;677:1567:31:o;2249:250::-;2334:1;2344:113;2358:6;2355:1;2352:13;2344:113;;;2434:11;;;2428:18;2415:11;;;2408:39;2380:2;2373:10;2344:113;;;-1:-1:-1;;2491:1:31;2473:16;;2466:27;2249:250::o;2504:1014::-;2666:4;2695:2;2735;2724:9;2720:18;2765:2;2754:9;2747:21;2788:6;2823;2817:13;2854:6;2846;2839:22;2892:2;2881:9;2877:18;2870:25;;2954:2;2944:6;2941:1;2937:14;2926:9;2922:30;2918:39;2904:53;;2992:2;2984:6;2980:15;3013:1;3023:466;3037:6;3034:1;3031:13;3023:466;;;3102:22;;;-1:-1:-1;;3098:36:31;3086:49;;3158:13;;3200:9;;3222:24;;;3259:74;3200:9;3307:15;;;3294:11;;;3259:74;:::i;:::-;3399:2;3376:17;-1:-1:-1;;3372:31:31;3360:44;;;;3356:53;;;-1:-1:-1;3467:12:31;;;;3432:15;;;;3059:1;3052:9;3023:466;;;-1:-1:-1;3506:6:31;;2504:1014;-1:-1:-1;;;;;;;2504:1014:31:o;4661:277::-;4728:6;4781:2;4769:9;4760:7;4756:23;4752:32;4749:52;;;4797:1;4794;4787:12;4749:52;4829:9;4823:16;4882:5;4875:13;4868:21;4861:5;4858:32;4848:60;;4904:1;4901;4894:12;4848:60;4927:5;4661:277;-1:-1:-1;;;4661:277:31:o;4943:127::-;5004:10;4999:3;4995:20;4992:1;4985:31;5035:4;5032:1;5025:15;5059:4;5056:1;5049:15;5265:184;5335:6;5388:2;5376:9;5367:7;5363:23;5359:32;5356:52;;;5404:1;5401;5394:12;5356:52;-1:-1:-1;5427:16:31;;5265:184;-1:-1:-1;5265:184:31:o;5454:380::-;5533:1;5529:12;;;;5576;;;5597:61;;5651:4;5643:6;5639:17;5629:27;;5597:61;5704:2;5696:6;5693:14;5673:18;5670:38;5667:161;;5750:10;5745:3;5741:20;5738:1;5731:31;5785:4;5782:1;5775:15;5813:4;5810:1;5803:15;5667:161;;5454:380;;;:::o;5839:222::-;5904:9;;;5925:10;;;5922:133;;;5977:10;5972:3;5968:20;5965:1;5958:31;6012:4;6009:1;6002:15;6040:4;6037:1;6030:15;5922:133;5839:222;;;;:::o;6066:127::-;6127:10;6122:3;6118:20;6115:1;6108:31;6158:4;6155:1;6148:15;6182:4;6179:1;6172:15;6198:897;6278:6;6331:2;6319:9;6310:7;6306:23;6302:32;6299:52;;;6347:1;6344;6337:12;6299:52;6380:9;6374:16;6409:18;6450:2;6442:6;6439:14;6436:34;;;6466:1;6463;6456:12;6436:34;6504:6;6493:9;6489:22;6479:32;;6549:7;6542:4;6538:2;6534:13;6530:27;6520:55;;6571:1;6568;6561:12;6520:55;6600:2;6594:9;6622:2;6618;6615:10;6612:36;;;6628:18;;:::i;:::-;6703:2;6697:9;6671:2;6757:13;;-1:-1:-1;;6753:22:31;;;6777:2;6749:31;6745:40;6733:53;;;6801:18;;;6821:22;;;6798:46;6795:72;;;6847:18;;:::i;:::-;6887:10;6883:2;6876:22;6922:2;6914:6;6907:18;6962:7;6957:2;6952;6948;6944:11;6940:20;6937:33;6934:53;;;6983:1;6980;6973:12;6934:53;6996:68;7061:2;7056;7048:6;7044:15;7039:2;7035;7031:11;6996:68;:::i;:::-;7083:6;6198:897;-1:-1:-1;;;;;;;6198:897:31:o;7100:289::-;7231:3;7269:6;7263:13;7285:66;7344:6;7339:3;7332:4;7324:6;7320:17;7285:66;:::i;:::-;7367:16;;;;;7100:289;-1:-1:-1;;7100:289:31:o;7673:384::-;-1:-1:-1;;;;;;7858:33:31;;7846:46;;7915:13;;7828:3;;7937:74;7915:13;8000:1;7991:11;;7984:4;7972:17;;7937:74;:::i;:::-;8031:16;;;;8049:1;8027:24;;7673:384;-1:-1:-1;;;7673:384:31:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testBuyCallOption()": "87addbe4",
    "testEnterTicket()": "168f4410",
    "testGetCallOption()": "2bb78d36",
    "testMint()": "9642ddaf",
    "testSetAuction()": "5558075b",
    "testTokenURI()": "b5b34603"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBuyCallOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testEnterTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetCallOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSetAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Test.sol\":\"NFTTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/NFT.sol\":{\"keccak256\":\"0x0f0fda66ac95caa761655799a048f9e90b85b7e1a2e68844657abef8990b0c17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dd1b3108116532363862bc4bf770438b0b5e1a37a453c4661cfc9b87c0a32e3\",\"dweb:/ipfs/QmWZK5bTA6b2qVuwuaY3RuVZ3GL5oCwEizvqy72ZrWUK9g\"]},\"test/Test.sol\":{\"keccak256\":\"0xa32b697317656e8948999f0d9cd6b882ad64d2614137b5dc0579a184bc9f60a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f24ff552a211d7ebbb39419afd897eac680234dd36b4a6ad7275209c7dc2120c\",\"dweb:/ipfs/QmdzsHk5pDXKGK3vWHr7HiPjkizgKKUnerbNnARxX7oLQk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBuyCallOption"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testEnterTicket"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetCallOption"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSetAuction"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Test.sol": "NFTTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/NFT.sol": {
        "keccak256": "0x0f0fda66ac95caa761655799a048f9e90b85b7e1a2e68844657abef8990b0c17",
        "urls": [
          "bzz-raw://5dd1b3108116532363862bc4bf770438b0b5e1a37a453c4661cfc9b87c0a32e3",
          "dweb:/ipfs/QmWZK5bTA6b2qVuwuaY3RuVZ3GL5oCwEizvqy72ZrWUK9g"
        ],
        "license": "MIT"
      },
      "test/Test.sol": {
        "keccak256": "0xa32b697317656e8948999f0d9cd6b882ad64d2614137b5dc0579a184bc9f60a0",
        "urls": [
          "bzz-raw://f24ff552a211d7ebbb39419afd897eac680234dd36b4a6ad7275209c7dc2120c",
          "dweb:/ipfs/QmdzsHk5pDXKGK3vWHr7HiPjkizgKKUnerbNnARxX7oLQk"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Test.sol",
    "id": 32016,
    "exportedSymbols": {
      "Address": [
        29997
      ],
      "Context": [
        30019
      ],
      "DSTest": [
        1786
      ],
      "ERC165": [
        30218
      ],
      "ERC721": [
        29506
      ],
      "IERC165": [
        30230
      ],
      "IERC20": [
        28579
      ],
      "IERC721": [
        29622
      ],
      "IERC721Metadata": [
        29667
      ],
      "IERC721Receiver": [
        29640
      ],
      "Math": [
        31095
      ],
      "NFT": [
        31677
      ],
      "NFTTest": [
        32015
      ],
      "Ownable": [
        28501
      ],
      "StdAssertions": [
        3260
      ],
      "StdChains": [
        3954
      ],
      "StdCheats": [
        6205
      ],
      "StdInvariant": [
        6495
      ],
      "StdStorage": [
        7245
      ],
      "StdStyle": [
        9889
      ],
      "StdUtils": [
        10696
      ],
      "Strings": [
        30194
      ],
      "Test": [
        10745
      ],
      "TestBase": [
        1846
      ],
      "Vm": [
        12065
      ],
      "console": [
        20129
      ],
      "console2": [
        28225
      ],
      "stdError": [
        6271
      ],
      "stdJson": [
        7071
      ],
      "stdMath": [
        7213
      ],
      "stdStorage": [
        8678
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:2645:30",
    "nodes": [
      {
        "id": 31679,
        "nodeType": "PragmaDirective",
        "src": "33:23:30",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 31680,
        "nodeType": "ImportDirective",
        "src": "58:21:30",
        "nodes": [],
        "absolutePath": "src/NFT.sol",
        "file": "src/NFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32016,
        "sourceUnit": 31678,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31681,
        "nodeType": "ImportDirective",
        "src": "80:28:30",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32016,
        "sourceUnit": 10746,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32015,
        "nodeType": "ContractDefinition",
        "src": "110:2567:30",
        "nodes": [
          {
            "id": 31696,
            "nodeType": "VariableDeclaration",
            "src": "141:87:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "nft",
            "nameLocation": "145:3:30",
            "scope": 32015,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFT_$31677",
              "typeString": "contract NFT"
            },
            "typeName": {
              "id": 31685,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31684,
                "name": "NFT",
                "nameLocations": [
                  "141:3:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31677,
                "src": "141:3:30"
              },
              "referencedDeclaration": 31677,
              "src": "141:3:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFT_$31677",
                "typeString": "contract NFT"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "3130",
                  "id": 31689,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "158:2:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                {
                  "hexValue": "31303030303030303030",
                  "id": 31690,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "162:10:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000_by_1",
                    "typeString": "int_const 1000000000"
                  },
                  "value": "1000000000"
                },
                {
                  "hexValue": "36",
                  "id": 31691,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "174:1:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                },
                {
                  "arguments": [
                    {
                      "hexValue": "307862363337453937384437363631466635343042383435433730434538344365343438423136393032",
                      "id": 31693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "184:42:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xb637E978D7661Ff540B845C70CE84Ce448B16902"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 31692,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28579,
                    "src": "177:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IERC20_$28579_$",
                      "typeString": "type(contract IERC20)"
                    }
                  },
                  "id": 31694,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "177:50:30",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$28579",
                    "typeString": "contract IERC20"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  {
                    "typeIdentifier": "t_rational_1000000000_by_1",
                    "typeString": "int_const 1000000000"
                  },
                  {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  {
                    "typeIdentifier": "t_contract$_IERC20_$28579",
                    "typeString": "contract IERC20"
                  }
                ],
                "id": 31688,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "150:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_contract$_IERC20_$28579_$returns$_t_contract$_NFT_$31677_$",
                  "typeString": "function (uint256,uint256,uint256,contract IERC20) returns (contract NFT)"
                },
                "typeName": {
                  "id": 31687,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 31686,
                    "name": "NFT",
                    "nameLocations": [
                      "154:3:30"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 31677,
                    "src": "154:3:30"
                  },
                  "referencedDeclaration": 31677,
                  "src": "154:3:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFT_$31677",
                    "typeString": "contract NFT"
                  }
                }
              },
              "id": 31695,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "150:78:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFT_$31677",
                "typeString": "contract NFT"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31760,
            "nodeType": "FunctionDefinition",
            "src": "574:376:30",
            "nodes": [],
            "body": {
              "id": 31759,
              "nodeType": "Block",
              "src": "601:349:30",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31700,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "619:14:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 31759,
                      "src": "611:22:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31699,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "611:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31706,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31703,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "650:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "654:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "650:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31701,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "636:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "640:9:30",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28697,
                      "src": "636:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 31705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "636:25:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "611:50:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31710,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "680:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "684:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "680:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31707,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "671:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12065",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "674:5:30",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11758,
                      "src": "671:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "671:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31713,
                  "nodeType": "ExpressionStatement",
                  "src": "671:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 31717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "719:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 31714,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "701:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "705:13:30",
                      "memberName": "buyCallOption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31334,
                      "src": "701:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 31718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "701:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31719,
                  "nodeType": "ExpressionStatement",
                  "src": "701:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 31723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "746:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "3630",
                        "id": 31724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "751:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      {
                        "hexValue": "31",
                        "id": 31725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "755:7:30",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 31726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "764:7:30",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130",
                        "id": 31727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "773:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 31720,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "731:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "735:10:30",
                      "memberName": "setAuction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31477,
                      "src": "731:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 31728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "731:45:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31729,
                  "nodeType": "ExpressionStatement",
                  "src": "731:45:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31733,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "795:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "799:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "795:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31730,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "786:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12065",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "789:5:30",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11758,
                      "src": "786:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "786:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31736,
                  "nodeType": "ExpressionStatement",
                  "src": "786:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 31740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "835:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 31737,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "816:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "820:14:30",
                      "memberName": "auctionmintNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31560,
                      "src": "816:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 31741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "816:21:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31742,
                  "nodeType": "ExpressionStatement",
                  "src": "816:21:30"
                },
                {
                  "assignments": [
                    31744
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31744,
                      "mutability": "mutable",
                      "name": "newBalance",
                      "nameLocation": "855:10:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 31759,
                      "src": "847:18:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31743,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "847:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31750,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31747,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "882:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "886:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "882:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31745,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "868:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "872:9:30",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28697,
                      "src": "868:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 31749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "868:25:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "847:46:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31752,
                          "name": "newBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31744,
                          "src": "910:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 31753,
                            "name": "initialBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31700,
                            "src": "924:14:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 31754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "941:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "924:18:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "910:32:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31751,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "903:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "903:40:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31758,
                  "nodeType": "ExpressionStatement",
                  "src": "903:40:30"
                }
              ]
            },
            "functionSelector": "9642ddaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMint",
            "nameLocation": "583:8:30",
            "parameters": {
              "id": 31697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:2:30"
            },
            "returnParameters": {
              "id": 31698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:30"
            },
            "scope": 32015,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31842,
            "nodeType": "FunctionDefinition",
            "src": "956:418:30",
            "nodes": [],
            "body": {
              "id": 31841,
              "nodeType": "Block",
              "src": "990:384:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31766,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1009:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1013:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1009:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31763,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1000:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12065",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1003:5:30",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11758,
                      "src": "1000:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1000:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31769,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 31773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1048:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 31770,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "1030:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1034:13:30",
                      "memberName": "buyCallOption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31334,
                      "src": "1030:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 31774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1030:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31775,
                  "nodeType": "ExpressionStatement",
                  "src": "1030:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 31779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1075:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "3630",
                        "id": 31780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1080:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      {
                        "hexValue": "31",
                        "id": 31781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1084:7:30",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 31782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1093:7:30",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130",
                        "id": 31783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1102:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 31776,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "1060:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1064:10:30",
                      "memberName": "setAuction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31477,
                      "src": "1060:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 31784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:45:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31785,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:45:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31789,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1124:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1128:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1124:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31786,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1115:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12065",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1118:5:30",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11758,
                      "src": "1115:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31792,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 31796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1164:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 31793,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "1145:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1149:14:30",
                      "memberName": "auctionmintNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31560,
                      "src": "1145:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 31797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1145:21:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31798,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31802,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1185:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1189:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1185:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31799,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1176:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12065",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1179:5:30",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11758,
                      "src": "1176:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1176:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31805,
                  "nodeType": "ExpressionStatement",
                  "src": "1176:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 31812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 31809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1229:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 31807,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31696,
                              "src": "1213:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFT_$31677",
                                "typeString": "contract NFT"
                              }
                            },
                            "id": 31808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1217:11:30",
                            "memberName": "used_Ticket",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31240,
                            "src": "1213:15:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view external returns (bool)"
                            }
                          },
                          "id": 31810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1213:18:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 31811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1234:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1213:26:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31806,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1206:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1206:34:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31814,
                  "nodeType": "ExpressionStatement",
                  "src": "1206:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 31818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1266:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 31815,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "1250:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1254:11:30",
                      "memberName": "enterTicket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31228,
                      "src": "1250:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 31819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1250:18:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31820,
                  "nodeType": "ExpressionStatement",
                  "src": "1250:18:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31824,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1287:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1291:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1287:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31821,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1278:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12065",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1281:5:30",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11758,
                      "src": "1278:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31827,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:20:30"
                },
                {
                  "assignments": [
                    31829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31829,
                      "mutability": "mutable",
                      "name": "used",
                      "nameLocation": "1313:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 31841,
                      "src": "1308:9:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 31828,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1308:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31834,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 31832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1336:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 31830,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "1320:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1324:11:30",
                      "memberName": "used_Ticket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31240,
                      "src": "1320:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view external returns (bool)"
                      }
                    },
                    "id": 31833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1320:18:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1308:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 31838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31836,
                          "name": "used",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31829,
                          "src": "1355:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 31837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1362:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1355:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31835,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1348:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1348:19:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31840,
                  "nodeType": "ExpressionStatement",
                  "src": "1348:19:30"
                }
              ]
            },
            "functionSelector": "168f4410",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEnterTicket",
            "nameLocation": "965:15:30",
            "parameters": {
              "id": 31761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "980:2:30"
            },
            "returnParameters": {
              "id": 31762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:0:30"
            },
            "scope": 32015,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31924,
            "nodeType": "FunctionDefinition",
            "src": "1380:602:30",
            "nodes": [],
            "body": {
              "id": 31923,
              "nodeType": "Block",
              "src": "1411:571:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31848,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1430:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1434:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1430:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31845,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1421:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12065",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1424:5:30",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11758,
                      "src": "1421:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1421:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31851,
                  "nodeType": "ExpressionStatement",
                  "src": "1421:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 31855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1469:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 31852,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "1451:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1455:13:30",
                      "memberName": "buyCallOption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31334,
                      "src": "1451:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 31856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1451:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31857,
                  "nodeType": "ExpressionStatement",
                  "src": "1451:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 31861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1496:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "3630",
                        "id": 31862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1501:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      {
                        "hexValue": "31",
                        "id": 31863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1505:7:30",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 31864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1514:7:30",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130",
                        "id": 31865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1523:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 31858,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "1481:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1485:10:30",
                      "memberName": "setAuction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31477,
                      "src": "1481:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 31866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:45:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31867,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:45:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31871,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1545:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1549:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1545:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31868,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1536:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12065",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1539:5:30",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11758,
                      "src": "1536:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1536:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31874,
                  "nodeType": "ExpressionStatement",
                  "src": "1536:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 31878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1585:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 31875,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "1566:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1570:14:30",
                      "memberName": "auctionmintNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31560,
                      "src": "1566:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 31879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1566:21:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31880,
                  "nodeType": "ExpressionStatement",
                  "src": "1566:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31884,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1606:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1610:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1606:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31881,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1597:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12065",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1600:5:30",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11758,
                      "src": "1597:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1597:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31887,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:20:30"
                },
                {
                  "assignments": [
                    31889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31889,
                      "mutability": "mutable",
                      "name": "actual",
                      "nameLocation": "1641:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 31923,
                      "src": "1627:20:30",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 31888,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1627:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31894,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 31892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1663:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 31890,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "1650:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1654:8:30",
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31287,
                      "src": "1650:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory)"
                      }
                    },
                    "id": 31893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:15:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1627:38:30"
                },
                {
                  "assignments": [
                    31896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31896,
                      "mutability": "mutable",
                      "name": "expected",
                      "nameLocation": "1689:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 31923,
                      "src": "1675:22:30",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 31895,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1675:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31898,
                  "initialValue": {
                    "hexValue": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d64447a4c345262324a4c634a645150744e75434a535a3554545a4b77594a5862626a7971567134396979794c2f7469636b65742e6a736f6e",
                    "id": 31897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1700:94:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bb6fba3d6d009dc5085ee141736001e2a511bd8dc8be2e247fba54a024d35108",
                      "typeString": "literal_string \"https://gateway.pinata.cloud/ipfs/QmdDzL4Rb2JLcJdQPtNuCJSZ5TTZKwYJXbbjyqVq49iyyL/ticket.json\""
                    },
                    "value": "https://gateway.pinata.cloud/ipfs/QmdDzL4Rb2JLcJdQPtNuCJSZ5TTZKwYJXbbjyqVq49iyyL/ticket.json"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1675:119:30"
                },
                {
                  "assignments": [
                    31900
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31900,
                      "mutability": "mutable",
                      "name": "expectedHash",
                      "nameLocation": "1812:12:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 31923,
                      "src": "1804:20:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 31899,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1804:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31907,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31904,
                            "name": "expected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31896,
                            "src": "1854:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 31902,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1837:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 31903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1841:12:30",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1837:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 31905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1837:26:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 31901,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1827:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 31906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:37:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1804:60:30"
                },
                {
                  "assignments": [
                    31909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31909,
                      "mutability": "mutable",
                      "name": "actualHash",
                      "nameLocation": "1882:10:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 31923,
                      "src": "1874:18:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 31908,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1874:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31916,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31913,
                            "name": "actual",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31889,
                            "src": "1922:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 31911,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1905:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 31912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1909:12:30",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1905:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 31914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1905:24:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 31910,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1895:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 31915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1895:35:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1874:56:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 31920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31918,
                          "name": "expectedHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31900,
                          "src": "1947:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 31919,
                          "name": "actualHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31909,
                          "src": "1963:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1947:26:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31917,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1940:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1940:35:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31922,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:35:30"
                }
              ]
            },
            "functionSelector": "b5b34603",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenURI",
            "nameLocation": "1389:12:30",
            "parameters": {
              "id": 31843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1401:2:30"
            },
            "returnParameters": {
              "id": 31844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1411:0:30"
            },
            "scope": 32015,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31962,
            "nodeType": "FunctionDefinition",
            "src": "1988:251:30",
            "nodes": [],
            "body": {
              "id": 31961,
              "nodeType": "Block",
              "src": "2024:215:30",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31928,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "2042:14:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 31961,
                      "src": "2034:22:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31927,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2034:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31936,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31933,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2085:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTTest_$32015",
                              "typeString": "contract NFTTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTTest_$32015",
                              "typeString": "contract NFTTest"
                            }
                          ],
                          "id": 31932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2077:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31931,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2077:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2077:13:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31929,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "2059:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2063:13:30",
                      "memberName": "pointBalances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31131,
                      "src": "2059:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 31935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2059:32:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2034:57:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 31940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2119:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 31937,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "2101:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2105:13:30",
                      "memberName": "buyCallOption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31334,
                      "src": "2101:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 31941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2101:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31942,
                  "nodeType": "ExpressionStatement",
                  "src": "2101:20:30"
                },
                {
                  "assignments": [
                    31944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31944,
                      "mutability": "mutable",
                      "name": "newBalance",
                      "nameLocation": "2139:10:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 31961,
                      "src": "2131:18:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31943,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2131:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31952,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31949,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2178:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTTest_$32015",
                              "typeString": "contract NFTTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTTest_$32015",
                              "typeString": "contract NFTTest"
                            }
                          ],
                          "id": 31948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2170:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31947,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2170:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2170:13:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31945,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "2152:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2156:13:30",
                      "memberName": "pointBalances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31131,
                      "src": "2152:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 31951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2152:32:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2131:53:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31954,
                          "name": "newBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31944,
                          "src": "2201:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 31955,
                            "name": "initialBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31928,
                            "src": "2213:14:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 31956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2230:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "2213:18:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2201:30:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31953,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2194:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2194:38:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31960,
                  "nodeType": "ExpressionStatement",
                  "src": "2194:38:30"
                }
              ]
            },
            "functionSelector": "87addbe4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyCallOption",
            "nameLocation": "1997:17:30",
            "parameters": {
              "id": 31925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:2:30"
            },
            "returnParameters": {
              "id": 31926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2024:0:30"
            },
            "scope": 32015,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31984,
            "nodeType": "FunctionDefinition",
            "src": "2245:148:30",
            "nodes": [],
            "body": {
              "id": 31983,
              "nodeType": "Block",
              "src": "2281:112:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 31968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2309:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 31965,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "2291:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2295:13:30",
                      "memberName": "buyCallOption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31334,
                      "src": "2291:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 31969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2291:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31970,
                  "nodeType": "ExpressionStatement",
                  "src": "2291:20:30"
                },
                {
                  "assignments": [
                    31972
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31972,
                      "mutability": "mutable",
                      "name": "points",
                      "nameLocation": "2329:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 31983,
                      "src": "2321:14:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31971,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2321:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31976,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31973,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "2338:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2342:13:30",
                      "memberName": "getCallOption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31347,
                      "src": "2338:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 31975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2338:19:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2321:36:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31978,
                          "name": "points",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31972,
                          "src": "2374:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 31979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2384:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "2374:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31977,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2367:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2367:19:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31982,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:19:30"
                }
              ]
            },
            "functionSelector": "2bb78d36",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetCallOption",
            "nameLocation": "2254:17:30",
            "parameters": {
              "id": 31963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2271:2:30"
            },
            "returnParameters": {
              "id": 31964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2281:0:30"
            },
            "scope": 32015,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32014,
            "nodeType": "FunctionDefinition",
            "src": "2399:210:30",
            "nodes": [],
            "body": {
              "id": 32013,
              "nodeType": "Block",
              "src": "2432:177:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 31990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2457:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "3630",
                        "id": 31991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2462:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      {
                        "hexValue": "31",
                        "id": 31992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2466:7:30",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 31993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2475:7:30",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130",
                        "id": 31994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2484:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 31987,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "2442:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 31989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2446:10:30",
                      "memberName": "setAuction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31477,
                      "src": "2442:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 31995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2442:45:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31996,
                  "nodeType": "ExpressionStatement",
                  "src": "2442:45:30"
                },
                {
                  "assignments": [
                    31998
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31998,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2505:5:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 32013,
                      "src": "2497:13:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31997,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2497:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32002,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31999,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31696,
                        "src": "2513:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFT_$31677",
                          "typeString": "contract NFT"
                        }
                      },
                      "id": 32000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2517:15:30",
                      "memberName": "getAuctionPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31425,
                      "src": "2513:19:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 32001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2513:21:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2497:37:30"
                },
                {
                  "assignments": [
                    32004
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32004,
                      "mutability": "mutable",
                      "name": "price2",
                      "nameLocation": "2552:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 32013,
                      "src": "2544:14:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32003,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2544:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32006,
                  "initialValue": {
                    "hexValue": "31303030303030303030",
                    "id": 32005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2561:10:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000_by_1",
                      "typeString": "int_const 1000000000"
                    },
                    "value": "1000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2544:27:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32008,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31998,
                          "src": "2588:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 32009,
                          "name": "price2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32004,
                          "src": "2595:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2588:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 32007,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2581:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 32011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2581:21:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32012,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:21:30"
                }
              ]
            },
            "functionSelector": "5558075b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetAuction",
            "nameLocation": "2408:14:30",
            "parameters": {
              "id": 31985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2422:2:30"
            },
            "returnParameters": {
              "id": 31986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2432:0:30"
            },
            "scope": 32015,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31682,
              "name": "Test",
              "nameLocations": [
                "130:4:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10745,
              "src": "130:4:30"
            },
            "id": 31683,
            "nodeType": "InheritanceSpecifier",
            "src": "130:4:30"
          }
        ],
        "canonicalName": "NFTTest",
        "contractDependencies": [
          31677
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32015,
          10745,
          1846,
          1843,
          10696,
          6495,
          6205,
          5526,
          3954,
          3260,
          1786
        ],
        "name": "NFTTest",
        "nameLocation": "119:7:30",
        "scope": 32016,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 30
}